/**
 * Theme Name: SC Golf Course Ratings Panel
 * Description: A customer WordPress theme built for the South Carolina Golf Course Ratings Panel website.
 * Theme URI: https://www.scgolfpanel.org
 * Template: hello-elementor
 * Author: Scott Shealy | vsshealy@gmail.com
 * Author URI: https://www.scottshealy.com
 * GitHub Theme: https://www.github.com/vsshealy/scgolfpanel.git
 * Version: 1.0.0
 * License GNU General Public v3 or Later
 * License URI: http://www.gnu.org/license/gpl-3.0.html
**/

/**
 * sass/variables/colors.scss
 * @package scgolfpanel
 * @author Scott Shealy
 * @version 1.0.0
 * @copyright 2022
**/

/**
 * sass/variables/units.scss
 * @package scgolfpanel
 * @author Scott Shealy
 * @version 1.0.0
 * @copyright 2022
**/

/**
 * sass/variables/media.scss
 * @package scgolfpanel
 * @author Scott Shealy
 * @version 1.0.0
 * @copyright 2022
**/

/**
 * sass/objects/links.scss
 * @package scgolfpanel
 * @author Scott Shealy
 * @version 1.0.0
 * @copyright 2022
**/

/**
 * sass/objects/text.scss
 * @package scgolfpanel
 * @author Scott Shealy
 * @version 1.0.0
 * @copyright 2022
**/

h1,
.h1,
h1.elementor-heading-title,
h2,
.h2,
h2.elementor-heading-title,
h3,
.h3,
h3.elementor-heading-title,
h4,
.h4,
h4.elementor-heading-title,
h5,
.h5,
h5.elementor-heading-title,
h6,
.h6,
h6.elementor-heading-title {
  line-height: 1.25;
  letter-spacing: 0px;
  text-transform: normal;
  margin: 2rem 0rem;
}

h1.italic,
.h1.italic,
h1.elementor-heading-title.italic,
h2.italic,
.h2.italic,
h2.elementor-heading-title.italic,
h3.italic,
.h3.italic,
h3.elementor-heading-title.italic,
h4.italic,
.h4.italic,
h4.elementor-heading-title.italic,
h5.italic,
.h5.italic,
h5.elementor-heading-title.italic,
h6.italic,
.h6.italic,
h6.elementor-heading-title.italic {
  font-style: italic;
}

h1,
.h1,
h1.elementor-heading-title,
h2,
.h2,
h2.elementor-heading-title,
h3,
.h3,
h3.elementor-heading-title {
  font-family: Merriweather, Georgia, serif;
  font-weight: 400;
  color: #948056;
}

h4,
.h4,
h4.elementor-heading-title,
h5,
.h5,
h5.elementor-heading-title,
h6,
.h6,
h6.elementor-heading-title {
  font-family: "Roboto Flex", Helvetica, Arial, sans-serif;
  font-weight: 700;
  color: #555555;
}

h1,
.h1,
h1.elementor-heading-title {
  font-size: 3.5em;
}

h2,
.h2,
h2.elementor-heading-title {
  font-size: 3em;
}

h3,
.h3,
h3.elementor-heading-title {
  font-size: 2.5em;
}

h4,
.h4,
h4.elementor-heading-title {
  font-size: 2em;
}

h5,
.h5,
h5.elementor-heading-title {
  font-size: 1.5em;
}

h6,
.h6,
h6.elementor-heading-title {
  font-size: 1em;
}

p,
.p,
li,
.li,
span,
.span {
  font-family: "Roboto Flex", Helvetica, Arial, sans-serif;
  font-size: 1em;
  line-height: 1.5;
  letter-spacing: 0px;
  color: #555555;
}

p,
.p {
  margin: 1rem 0rem;
}

li,
.li {
  margin: 0.5rem 0rem;
}

a,
.a {
  color: #00672f;
  text-decoration: none;
}

a:hover,
.a:hover {
  color: #559a74;
  text-decoration: none;
}

/**
 * sass/layouts/site.scss
 * @package scgolfpanel
 * @author Scott Shealy
 * @version 1.0.0
 * @copyright 2022
**/

* {
  margin: 0rem;
  padding: 0rem;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

html {
  height: 100vh;
  width: 100%;
  position: relative;
  overflow-x: hidden;
}

body {
  height: 100%;
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  margin: 0rem;
  padding: 0rem;
  background-color: #dfdfdf;
  font-family: "Roboto Flex", Helvetica, Arial, sans-serif;
  letter-spacing: 0px;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #555555;
}

/**
 * sass/layouts/clearfix.scss
 * @package scgolfpanel
 * @author Scott Shealy
 * @version 1.0.0
 * @copyright 2022
**/

.clear {
  clear: both;
}

.clearfix {
  zoom: 1;
}

.clearfix:before,
.clearfix:after {
  content: "";
  display: table;
}

.clearfix:after {
  clear: both;
}

/**
 * sass/layouts/devices.scss
 * @package scgolfpanel
 * @author Scott Shealy
 * @version 1.0.0
 * @copyright 2022
**/

/**
 * sass/layouts/flexbox.scss
 * @package scgolfpanel
 * @author Scott Shealy
 * @version 1.0.0
 * @copyright 2022
**/

.flexbox,
.flexbox-wrap-reverse,
.flexbox-wrap-none,
.flexbox-wrap,
.flexbox-center,
.flexbox-center-all,
.flexbox-vertical,
.flexbox-vertical-spacearound,
.flexbox-vertical-spacebetween,
.flexbox-vertical-stretch,
.flexbox-vertical-baseline,
.flexbox-vertical-center,
.flexbox-vertical-bottom,
.flexbox-vertical-top,
.flexbox-horizontal,
.flexbox-horizontal-spacearound,
.flexbox-horizontal-spacebetween,
.flexbox-horizontal-center,
.flexbox-horizontal-right,
.flexbox-horizontal-left,
.flexbox-column,
.flexbox-column-reverse,
.flexbox-row,
.flexbox-row-reverse {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.flexbox-row,
.flexbox-row-reverse {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
}

.flexbox-row-reverse {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}

.flexbox-column,
.flexbox-column-reverse {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

.flexbox-column-reverse {
  -webkit-box-orient: vertical;
  -webkit-box-direction: reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
}

.flexbox-horizontal,
.flexbox-horizontal-spacearound,
.flexbox-horizontal-spacebetween,
.flexbox-horizontal-center,
.flexbox-horizontal-right,
.flexbox-horizontal-left {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
}

.flexbox-horizontal-left {
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.flexbox-horizontal-right {
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.flexbox-horizontal-center {
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.flexbox-horizontal-spacebetween {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.flexbox-horizontal-spacearound {
  -ms-flex-pack: distribute;
  justify-content: space-around;
}

.flexbox-vertical,
.flexbox-vertical-spacearound,
.flexbox-vertical-spacebetween,
.flexbox-vertical-stretch,
.flexbox-vertical-baseline,
.flexbox-vertical-center,
.flexbox-vertical-bottom,
.flexbox-vertical-top {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

.flexbox-vertical-top {
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
}

.flexbox-vertical-bottom {
  -webkit-box-align: end;
  -ms-flex-align: end;
  align-items: flex-end;
}

.flexbox-vertical-center {
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.flexbox-vertical-baseline {
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
}

.flexbox-vertical-stretch {
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.flexbox-vertical-spacebetween {
  -webkit-box-align: space-between;
  -ms-flex-align: space-between;
  align-items: space-between;
}

.flexbox-vertical-spacearound {
  -webkit-box-align: space-around;
  -ms-flex-align: space-around;
  align-items: space-around;
}

.flexbox-center-all {
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.flexbox-wrap {
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.flexbox-wrap-none {
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
}

.flexbox-wrap-reverse {
  -ms-flex-wrap: wrap-reverse;
  flex-wrap: wrap-reverse;
}

/**
 * sass/layouts/wrappers.scss
 * @package scgolfpanel
 * @author Scott Shealy
 * @version 1.0.0
 * @copyright 2022
**/

.wrapper,
.wrapper-none,
.wrapper-banner,
.wrapper-section,
.wrapper-hero,
.wrapper-footer,
.wrapper-header,
.wrapper-content,
.wrapper-full,
.wrapper-full-screen {
  margin: 0rem auto;
}

.wrapper-full,
.wrapper-full-screen {
  width: 100%;
  min-width: 100%;
  max-width: 100%;
}

.wrapper-full-screen {
  height: 100vh;
  min-height: 100vh;
  max-height: 100vh;
}

.wrapper-content {
  width: 100%;
  max-width: 1920px !important;
}

.wrapper-header {
  width: 100%;
}

.wrapper-footer {
  width: 100%;
}

.wrapper-hero {
  width: 100%;
}

.wrapper-section {
  width: 100%;
}

.wrapper-banner {
  width: 100%;
}

.wrapper-none {
  width: 100%;
  padding: 0rem;
}

/**
 * sass/objects/images.scss
 * @package scgolfpanel
 * @author Scott Shealy
 * @version 1.0.0
 * @copyright 2022
**/

.image-responsive {
  height: 0rem;
  position: relative;
  padding-top: 30px;
  padding-bottom: 56.25%;
  overflow: hidden;
}

.image-responsive img {
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0%;
  left: 0%;
}

/**
 * sass/objects/videos.scss
 * @package scgolfpanel
 * @author Scott Shealy
 * @version 1.0.0
 * @copyright 2022
**/

.video-responsive {
  height: 0rem;
  position: relative;
  padding-top: 30px;
  padding-bottom: 56.25%;
  overflow: hidden;
}

.video-responsive iframe,
.video-responsive object,
.video-responsive embed {
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0%;
  left: 0%;
}

/**
 * sass/objects/buttons.scss
 * @package scgolfpanel
 * @author Scott Shealy
 * @version 1.0.0
 * @copyright 2022
**/

.button,
.button-solid,
.button-form,
.elementor-button,
.btn-slider,
.button-alt,
.button-ghost,
.button-mobile {
  display: inline-block;
  margin: 2rem 1rem;
  padding: 1rem 2rem;
  font-family: "Roboto Flex", Helvetica, Arial, sans-serif;
  font-size: 1em;
  font-weight: 400;
  text-align: center;
  text-transform: none;
}

.button:hover,
.button-solid:hover,
.button-form:hover,
.elementor-button:hover,
.btn-slider:hover,
.button-alt:hover,
.button-ghost:hover,
.button-mobile:hover {
  cursor: pointer;
}

.button i,
.button-solid i,
.button-form i,
.elementor-button i,
.btn-slider i,
.button-alt i,
.button-ghost i,
.button-mobile i {
  display: inline-block;
  margin-left: 0rem;
  margin-right: 0.5rem;
}

.button,
.button-solid,
.button-form,
.elementor-button,
.btn-slider {
  background-color: #00672f;
  border: 1px solid white;
  color: white;
}

.button:hover,
.button-solid:hover,
.button-form:hover,
.elementor-button:hover,
.btn-slider:hover {
  background-color: #408d63;
  border: 1px solid white;
  color: white;
}

.button-alt {
  background-color: white;
  border: 1px solid #00672f;
  color: #00672f;
}

.button-alt:hover {
  background-color: #00672f;
  border: 1px solid white;
  color: white;
}

.button-ghost {
  background-color: transparent;
  border: #00672f;
  color: #00672f;
}

.button-ghost:hover {
  background-color: #00672f;
  border: 1px solid white;
  color: white;
}

.button-mobile {
  width: 100%;
  display: block;
  margin: 0rem auto;
  background-color: #00672f;
  border: 1px solid #157440;
  color: white;
}

.button-mobile:hover {
  background-color: #408d63;
  border: white;
  color: white;
}

/**
 * sass/objects/borders.scss
 * @package scgolfpanel
 * @author Scott Shealy
 * @version 1.0.0
 * @copyright 2022
**/

/**
 * sass/objects/shadows.scss
 * @package scgolfpanel
 * @author Scott Shealy
 * @version 1.0.0
 * @copyright 2022
**/

.shadow-main {
  -webkit-box-shadow: 0rem 0rem 0.5rem rgba(32, 32, 32, 0.1);
  box-shadow: 0rem 0rem 0.5rem rgba(32, 32, 32, 0.1);
}

/**
 * sass/objects/backgrounds.scss
 * @package scgolfpanel
 * @author Scott Shealy
 * @version 1.0.0
 * @copyright 2022
**/

/**
 * sass/objects/gradients.scss
 * @package scgolfpanel
 * @author Scott Shealy
 * @version 1.0.0
 * @copyright 2022
**/

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

@media (min-width: 576px) {
  body {
    font-size: 14px;
  }
}

@media (min-width: 768px) {
  body {
    font-size: 14px;
  }
}

@media (min-width: 992px) {
  body {
    font-size: 16px;
  }

  .desktop-show {
    display: inherit;
  }

  .desktop-hide {
    display: none !important;
  }

  .desktop-sm-show {
    display: inherit;
  }

  .desktop-sm-hide {
    display: none !important;
  }
}

@media (min-width: 1200px) {
  body {
    font-size: 16px;
  }

  .desktop-md-show {
    display: inherit;
  }

  .desktop-md-hide {
    display: none !important;
  }
}

@media (min-width: 1400px) {
  .desktop-lg-show {
    display: inherit;
  }

  .desktop-lg-hide {
    display: none !important;
  }
}

@media (min-width: 1440px) {
  body {
    font-size: 16px;
  }
}

@media (min-width: 1920px) {
  .desktop-xl-show {
    display: inherit;
  }

  .desktop-xl-hide {
    display: none !important;
  }

  .wrapper-content {
    width: 1920px;
  }

  .wrapper-header {
    padding-left: 0rem;
    padding-right: 0rem;
  }

  .wrapper-footer {
    padding-left: 0rem;
    padding-right: 0rem;
  }
}

@media (min-width: 3840px) {
  .desktop-xxl-show {
    display: inherit;
  }

  .desktop-xxl-hide {
    display: none !important;
  }
}

@media (max-width: 1920px) {
  .wrapper-content {
    width: 100%;
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .wrapper-header {
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .wrapper-footer {
    padding-left: 1rem;
    padding-right: 1rem;
  }
}

@media (max-width: 992px) {
  .mobile-show {
    display: inherit;
  }

  .mobile-hide {
    display: none important;
  }
}

@media (max-width: 576px) {
  .phone-show {
    display: inherit;
  }

  .phone-hide {
    display: none !important;
  }
}

@media (max-width: 575px) {
  body {
    font-size: 14px;
  }
}

@media (min-width: 576px) and (max-width: 992px) {
  .tablet-show {
    display: inherit;
  }

  .tablet-hide {
    display: none !important;
  }
}